apply plugin: 'maven'

/*
ext {
    pomVersion = lib_version
    pomGroupId = '*'
    // pomArtifactId, pomArtifactName, pomArtifactDescription

    pomSiteUrl = '*'
    pomGitUrl = '*.git'

    pomLicenses = {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    pomDevelopers = {
        developer {
            id '*'
            name '*'
            email '*'
            // organization, organizationUrl
        }
    }
}
apply from: 'publishing.gradle'
$ gradle uploadArchives
*/

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def localProperties = new Properties()
def localFile = rootProject.file("local.properties")
if (localFile.exists()) {
    localProperties.load(localFile.newDataInputStream())
}

def props = { propName, defaultValue = "" ->
    def local = localProperties.containsKey(propName)

    if (local) return localProperties.getProperty(propName)
    else return System.getenv(propName) ?: defaultValue
}

uploadArchives {
    // Authentication
    def username = props("nexus.username")
    def password = props("nexus.password")
    def repositoryUrl = props("nexus.repository")

    println "Project: $project.path"
    println "Username: $username"
    println "Repo URL: $repositoryUrl"

    repositories.mavenDeployer {
        if (repositoryUrl != null) {
            repository(url: repositoryUrl) {
                authentication(userName: username, password: password)
            }
        } else {
            repository(url: repositories.mavenLocal().url)
        }

        pom {
            groupId = pomGroupId
            artifactId = pomArtifactId
            version = pomVersion
        }

        pom.project {
            packaging 'aar'

            name pomArtifactName
            description pomArtifactDescription

            url pomSiteUrl

            licenses(pomLicenses)
            developers(pomDevelopers)

            scm {
                connection = pomGitUrl
                developerConnection = pomGitUrl
                url = pomSiteUrl
            }
        }
    }
}
